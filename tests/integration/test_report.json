{
  "test_session": {
    "timestamp": "2025-07-26T22:35:59.451820",
    "workspace": "test_workspace/test_session_20250726_223529",
    "total_workflows": 7
  },
  "performance_summary": {
    "total_operations": 7,
    "total_time_seconds": 21.843994140625,
    "max_memory_mb": 1441.640625,
    "average_cpu_percent": 85.25714285714285,
    "operations": [
      {
        "operation": "REST API Creation",
        "elapsed_seconds": 6.38645601272583,
        "memory_rss_mb": 1441.640625,
        "memory_vms_mb": 408724.984375,
        "memory_growth_mb": 816.421875,
        "threads": 6,
        "thread_growth": 1,
        "children": 0,
        "children_growth": 0,
        "cpu_percent": 0.0,
        "timestamp": "2025-07-26T22:35:36.152568"
      },
      {
        "operation": "Metrics Endpoint Addition",
        "elapsed_seconds": 2.1952340602874756,
        "memory_rss_mb": 1358.515625,
        "memory_vms_mb": 408755.984375,
        "memory_growth_mb": -272.640625,
        "threads": 6,
        "thread_growth": 0,
        "children": 0,
        "children_growth": 0,
        "cpu_percent": 72.9,
        "timestamp": "2025-07-26T22:35:41.129093"
      },
      {
        "operation": "Codebase Search",
        "elapsed_seconds": 5.5826098918914795,
        "memory_rss_mb": 1428.734375,
        "memory_vms_mb": 408753.4375,
        "memory_growth_mb": 32.5625,
        "threads": 5,
        "thread_growth": -1,
        "children": 0,
        "children_growth": 0,
        "cpu_percent": 59.6,
        "timestamp": "2025-07-26T22:35:49.132585"
      },
      {
        "operation": "Code Refactoring",
        "elapsed_seconds": 1.4810330867767334,
        "memory_rss_mb": 1427.78125,
        "memory_vms_mb": 408762.4375,
        "memory_growth_mb": -6.3125,
        "threads": 5,
        "thread_growth": 0,
        "children": 0,
        "children_growth": 0,
        "cpu_percent": 61.0,
        "timestamp": "2025-07-26T22:35:52.642502"
      },
      {
        "operation": "Test Execution",
        "elapsed_seconds": 3.3538320064544678,
        "memory_rss_mb": 1325.515625,
        "memory_vms_mb": 409016.4375,
        "memory_growth_mb": -391.140625,
        "threads": 5,
        "thread_growth": 0,
        "children": 0,
        "children_growth": 0,
        "cpu_percent": 93.3,
        "timestamp": "2025-07-26T22:35:56.568426"
      },
      {
        "operation": "Server Operations",
        "elapsed_seconds": 0.7983279228210449,
        "memory_rss_mb": 1406.359375,
        "memory_vms_mb": 409015.4375,
        "memory_growth_mb": 39.796875,
        "threads": 5,
        "thread_growth": 0,
        "children": 0,
        "children_growth": 0,
        "cpu_percent": 187.5,
        "timestamp": "2025-07-26T22:35:57.386015"
      },
      {
        "operation": "Error Simulation",
        "elapsed_seconds": 2.0465011596679688,
        "memory_rss_mb": 1348.203125,
        "memory_vms_mb": 409015.4375,
        "memory_growth_mb": -59.703125,
        "threads": 5,
        "thread_growth": 0,
        "children": 0,
        "children_growth": 0,
        "cpu_percent": 122.5,
        "timestamp": "2025-07-26T22:35:59.444282"
      }
    ]
  },
  "coverage_summary": {
    "agents_tested": [
      "CodeGeneratorAgent",
      "CodeEditorAgent",
      "CodebaseExpertAgent",
      "ToolExecutorAgent",
      "CodeQualityAgent"
    ],
    "features_validated": [
      "Agent orchestration",
      "MemOS RAG integration",
      "Code generation",
      "Code modification",
      "Terminal operations",
      "Error handling",
      "Performance monitoring"
    ]
  },
  "test_artifacts": {
    "generated_files": [
      "analyze_classification_failures.py",
      "debug_project_memory.py",
      "gguf_memory_service.py",
      "config_loader.py",
      "test_secure_file.py",
      "test_toolbox.py",
      "test_memcube_config.py",
      "test_new_context.py",
      "validate_test_setup.py",
      "test_dynamic_memcube_lifecycle.py",
      "quantize.py",
      "test_kvcache_integration.py",
      "test_project_memory_isolation.py",
      "validate_architecture.py",
      "test_automatic_codebase_syncing.py",
      "audit_agent_mapping.py",
      "test_model_manager.py",
      "test_optimized_agent.py",
      "test_simple_executor.py",
      "test_prompt_refinements_direct.py",
      "performance_benchmark.py",
      "test_enhanced_tool_executor_comprehensive.py",
      "validation_fixed.py",
      "test_error_recovery_basic.py",
      "analyze_routing_failures.py",
      "test_env.py",
      "test_simple_executor_fixed.py",
      "test_coding_performance_normal.py",
      "test_orchestrator_simple.py",
      "test_coding_performance_cli.py",
      "prompt_candidates.py",
      "debug_orchestrator.py",
      "test_orchestrator_integration.py",
      "create_classifier_regression_suite.py",
      "test_optimal_context.py",
      "test_parametric_memory_integration.py",
      "test_autonomous_recovery_comprehensive.py",
      "project_aware_file_monitor.py",
      "llama_cpp_wrapper.py",
      "test_file.py",
      "test_document_creation_pipeline.py",
      "test_web_researcher.py",
      "test_context_isolation_and_parametric_influence.py",
      "performance_profiler.py",
      "test_memcube_lifecycle_simple.py",
      "factorial.py",
      "test_web_integration.py",
      "test_yaml_model_manager.py",
      "test_long_prompt.py",
      "validation_test.py",
      "example_generated.py",
      "run_gguf_service.py",
      "project_memory_manager.py",
      "test_code_editor.py",
      "test_final_validation.py",
      "test_coding_performance_gguf.py",
      "test_integration_final.py",
      "test_tool_executor.py",
      "run_integration_tests.py",
      "test_load.py",
      "test_tool_executor_simple.py",
      "setup_service.py",
      "test_enhanced_workflow_integration.py",
      "test_simple_edit.py",
      "validate_environment.py",
      "generated_api.py",
      "test_lru_eviction.py",
      "test_context_performance.py",
      "test_improved_routing.py",
      "validate_service_fixes.py",
      "test_prompt_candidates.py",
      "test_improved_classifier_prompts.py",
      "test_refactored_agents.py",
      "test_comprehensive_multi_agent_pipeline.py"
    ],
    "log_files": [
      "tests/integration/full_stack_test.log"
    ]
  }
}